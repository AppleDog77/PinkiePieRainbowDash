//---------------------------Envelopes--------------------------
//This .dic file is probably one of the simplest you will have to edit, and in fact, if the way it works doesn't appeal to you, you can completely ignore it if you like!
//Basically, what this file does is set up certain things that I believe are called envelopes or SakuraScriptEnv on the CROW-SSP Dictionary site (which I link to a few times throughout the walkthrough), but I've always kind of thought of them as variables. Envelopes is probably a less confusing name though.
//Essentially, what this file is for is for creating lists populated with items, and storing them in a word that can later be called during dialogue. If you've read the walkthrough or gone through any of the other .dic files, you've probably seen these before. They are always preceded with a % sign and have a word in parentheses (well, almost always) afterwards. %(username) is one, which displays the user's name, and %(heshe) is another, which displays the right pronoun depending on what the user selected in bootend.dic or menu.dic. Other ones you might not have seen include %(passmin), which shows how many minutes have passed since the ghost was started, %(screenheight) which shows the height of the display they're currently on, and %(keroname) for the name of the second character, among many, many others. Many of these are predefined by the AYA scripting and will be listed on the CROW-SSP site mentioned above, and many of them you will never have to use. By far the ones you will be using the most will be %(username) and the pronoun ones, and those are the only ones you'll have to worry about normally.

//So where does this file come in? Well, you can define your own envelopes if you want! Which means essentially that you can create a list of items and attach it to almost any word you want. Here's an example.

ghibli
{
	"Kiki’s Delivery Service"
	"My Neighbor Totoro"
	"Spirited Away"
}

//As you can see, we stated a word, opened some brackets, wrote some text, and closed the brackets. Now when you write ghost dialogue, you can write %(exampleenvelope) and your ghost will randomly display any of the three bits of text within the brackets! You can go ahead and test this yourself to see how it works, and I'll include some sample dialogue with this in aitalk.dic.
//Note: Do not put commas in your list entries unless you're doing a double envelope as detailed further below.

//Now, what is the actual use of these envelopes? You can store tons of random information in any kind of envelope you want to keep your ghost's dialogue varied! You can store various cities you like in %(city), musicians you like in %(musicians), places your ghost has been in %(places), food you like in %(food), movies you like in %(movie), fandoms you like in %(fandom), characters you like in %(fandomcharacter), celebrities you like under %(celebrity) or friends of yours in %(friends) or bnfs in %(bnfs), folders on your computer under %(folders), Pokemon you like under %(pokemon), insults under %(insult), swear words under %(swearword) which could potentially be hilarious, just about anything! You can make lists of absolutely anything to use with dialogue for your ghost! This .dic file is only limited by your imagination!
//Not only that, but you can put an envelope IN an envelope. Here's another example.

envelope
{
	"My favorite Studio Ghibli movie is %(ghibli)."
	"%(username)'s computer is cool!"
	"My favorite We Bare Bears character is %(wbbcharacter)."
	"%(pokemon) is the best."
	"The greatest show of all time is... %(shows2)!"
	"I highly recommend you watch %(movies)!"
}

//So you see, you can even nest envelopes if you want! This is particularly handy with %(username), so your ghost can be specific if they're talking about something of the user's, like their files or folders for example. I'll leave a few lists in here you can fill out as you like. And if this doesn't give you ideas, you can ignore this file, since nothing in it will show up unless you write it into the dialogue. You can add or take away as many items as you want from each list.
//Odie: It has given me way too much ideas... ;)

movies
{
	"Toy Story 2"
	"My Little Pony: The Movie (2017)"
	"Finding Nemo"
	"Finding Dory"
	"Toy Story"
	"Toy Story 3"
	"Toy Story 4"
	"Cars"
	"Wall-E"
	"Up"
	"Brave"
	"Song of the Sea"
	"Wolfwalkers"
	"My Father's Dragon"
	"The Secret of Kells"
	"The Breadwinner"
	"Ratatouille"
	"Bolt"
	"The Emperor's New Groove"
	"Mickey Saves Christmas"
	"Mickey's Once Upon a Christmas"
	"Chicken Run"
	"Wallace & Gromit in A Grand Day Out"
	"Wallace & Gromit in The Wrong Trousers"
	"Wallace & Gromit in A Close Shave"
	"Wallace & Gromit in A Matter of Loaf and Death"
	"The Curse of the Were-Rabbit"
	"Shaun the Sheep Movie"
	"A Shaun the Sheep Movie: Farmageddon"
	"Shaun the Sheep: The Farmer's Llamas"
	"Lilo & Stitch"
	"Lilo & Stitch 2"
	"Stitch! The Movie"
	"Leroy & Stitch"
	"How to Train Your Dragon"
	"How to Train Your Dragon 2"
	"How to Train Your Dragon 3"
	"Shrek"
	"Shrek 2"
	"Shrek 4"
	"Kung Fu Panda"
	"Kung Fu Panda 2"
	"Kung Fu Panda 3"
	"Madagascar"
	"Madagascar 2"
	"Madagascar 3"
	"The Penguins of Madagascar movie"
	"Antz"
	"Monsters, Inc."
	"The Incredibles"
	"A Bug's Life"
	"Cars 3"
	"Monsters University"
	"Inside Out"
	"Coco"
	"The Incredibles 2"
	"Soul"
	"Onward"
	"Burrow"
	"Day & Night"
	"The Muppets (2011)"
	"Muppets Most Wanted"
	"The Muppet Movie"
	"Muppet Treasure Island"
	"Muppet Christmas Carol"
	"Great Muppet Caper"
	"Muppets Take Manhattan"
	"Hilda and the Mountain King"
	"Thunder and The House of Magic"
	"Chickenhare and the Hamster of Darkness"
	"Cat Burglar (2022)"
	"The Good Dinosaur"
	"Home Alone"
	"Home Alone 2"
	"Mrs. Doubtfire"
	"Jumanji"
	"The Brave Little Toaster"
	"The Monkey King (2023)"
	"The Tigger Movie"
	"Johnny English series"
	"Big Hero 6"
	"The Lego Movie"
	"The Lego Movie 2"
	"Wreck-It Ralph"
	"Wreck-It Ralph 2"
	"Christopher Robin"
	"Detective Pikachu"
	"The Super Mario Bros. Movie"
	"Barbie"
	"Oppenheimer"
	"Ruby Gillman, Teenage Kraken"
	"Elemental"
	"Sonic the Hedgehog"
	"Sonic the Hedgehog 2"
	"Bean"
	"Mr. Bean's Holiday"
	"Paddington"
	"Paddington 2"
	"Clifford's Really Big Movie"
	"Monty Python's Life of Brian"
	"Monty Python and the Holy Grail"
	"Monty Python's The Meaning of Life"
	"Baby's Day Out"
	"Casper"
	"Dunston Checks In"
	"The Land Before Time (and most of its sequels)"
	"A Goofy Movie"
	"An Extremely Goofy Movie"
}

wbbcharacter
{
	"Grizz"
	"Panda"
	"Ice Bear"
}

food
{
	"Bananas"
	"Apples"
	"Lemons"
	"Honey"
	"Brownies"
	"Pies"
	"Cakes"
	"Chocolate"
	"Carrots"
	"Raspberries"
	"Strawberries"
	"Chimichangas"
	"Cherrychangas"
}

pets
{
	"Cat"
	"Dog"
	"Bird"
	"Lion"
	"Tiger"
	"Bear"
	"Platypus"
	"Naked Mole Rat"
	"Horse"
	"Pony"
	"Elephant"
	"Peafowl"
	"Turkey"
	"Crow"
	"Kingfisher"
	"Owl"
	"Parrot"
	"Gerbil"
	"Hamster"
	"Pet Rock"
	"Slime"
	"Snail"
	"Slug"
	"Turtle"
	"Tortoise"
	"Dolphin"
	"Shark"
	"Whale"
	"Octopus"
	"Orca"
	"Rabbit"
	"Hare"
	"Pika"
	"Frog"
	"Lizard"
	"Leopard"
	"Cheetah"
}

hr
{
	"Homestar Runner"
	"Strong Bad"
}

pokemon
{
	"Caterpie"
	"Metapod"
	"Butterfree"
	"Ponyta"
	"Rapidash"
	"Charmander"
	"Charmeleon"
	"Charizard"
	"Bulbasaur"
	"Ivysaur"
	"Venusaur"
	"Squirtle"
	"Wartortle"
	"Blastoise"
	"Chikorita"
	"Cyndaquil"
	"Totodile"
	"Treecko"
	"Sceptile"
	"Torchic"
	"Blaziken"
	"Mudkip"
	"Swampert"
	"Turtwig"
	"Chimchar"
	"Piplup"
	"Empoleon"
	"Snivy"
	"Tepig"
	"Oshawott"
	"Chespin"
	"Fennekin"
	"Brixen"
	"Delphox"
	"Froakie"
	"Frogadier"
	"Greninja"
	"Rowlet"
	"Dartrix"
	"Decidueye"
	"Litten"
	"Torracat"
	"Incineroar"
	"Popplio"
	"Brionne"
	"Primarina"
	"Grookey"
	"Scorbunny"
	"Sobble"
	"Sprigatito"
	"Fuecoco"
	"Quaxly"
	"Pichu"
	"Pikachu"
	"Raichu"
	"Eevee"
	"Vaporeon"
	"Jolteon"
	"Flareon"
	"Espeon"
	"Umbreon"
	"Leafeon"
	"Sylveon"
	"Magikarp"
	"Gyarados"
	"Ditto"
	"Shuckle"
	"Smeargle"
	"Mew"
	"Mewtwo"
	"Teddiursa"
    "Ursaring"
    "Phanpy"
    "Donphan"
    "Mantine"
    "Skarmory"
    "Herdier"
}

insults
{
	"Horseapple"
	"Fruitcake"
}

elements
{
	"Honesty"
	"Magic"
	"Loyalty"
	"Generosity"
	"Kindness"
}

dragon
{
	"Spike"
	"Toothless"
}

shows1 //for shows with more than one season
{
	"My Little Pony: Friendship is Magic"
	"Littlest Pet Shop"
	"Bluey"
	"Martha Speaks"
	"Amphibia"
	"The Owl House"
	"Gravity Falls"
	"Adventure Time"
	"Avatar: The Last Airbender"
	"Arthur"
	"Phineas and Ferb"
	"We Bare Bears"
	"Chowder"
	"Foster's Home for Imaginary Friends"
	"She-Ra and the Princesses of Power"
	"Kipo and the Age of Wonderbeasts"
	"Carmen Sandiego"
	"Barbie: Life in the Dreamhouse"
	"Garfield and Friends"
	"The Garfield Show"
	"Tiny Toon Adventures"
	"Animaniacs"
	"Invader Zim"
	"Hilda"
	"Steven Universe"
	"Babar"
	"The Magic Adventures of Mumfie"
	"The Penguins of Madagascar"
	"All Hail King Julien"
	"The New Adventures of Winnie the Pooh"
	"DuckTales"
	"Miss Spider's Sunny Patch Friends"
	"The Angry Beavers"
	"Viva Pinata"
	"Mr. Bean"
	"Blackadder"
	"Paddington"
	"Clifford the Big Red Dog"
	"Kenny the Shark"
	"Brandy & Mr. Whiskers"
	"Lilo & Stitch: The Series"
	"Monty Python's Flying Circus"
	"Shaun the Sheep"
	"Scooby-Doo! Mystery, Inc."
	"Dexter's Laboratory"
	"Elena of Avalor"
	"Sofia the First"
	"Rapunzel's Tangled Adventure"
	"Big Hero 6: The Series"
	"Infinity Train"
	"Kikoriki"
	"Green Eggs and Ham"
}

shows2 //for all shows
{
	"My Little Pony: Friendship is Magic"
	"My Little Pony: Make Your Mark"
	"Littlest Pet Shop"
	"Bluey"
	"Martha Speaks"
	"Amphibia"
	"The Owl House"
	"Gravity Falls"
	"Adventure Time"
	"Avatar: The Last Airbender"
	"Arthur"
	"Phineas and Ferb"
	"We Bare Bears"
	"Chowder"
	"Foster's Home for Imaginary Friends"
	"She-Ra and the Princesses of Power"
	"Kipo and the Age of Wonderbeasts"
	"Carmen Sandiego"
	"Barbie: Life in the Dreamhouse"
	"Garfield and Friends"
	"The Garfield Show"
	"Tiny Toon Adventures"
	"Animaniacs"
	"Invader Zim"
	"Hilda"
	"Steven Universe"
	"Babar"
	"The Magic Adventures of Mumfie"
	"The Penguins of Madagascar"
	"All Hail King Julien"
	"The New Adventures of Winnie the Pooh"
	"DuckTales"
	"Miss Spider's Sunny Patch Friends"
	"The Angry Beavers"
	"Viva Pinata"
	"Mr. Bean"
	"Blackadder"
	"Paddington"
	"Clifford the Big Red Dog"
	"Kenny the Shark"
	"Infinity Train"
	"Brandy & Mr. Whiskers"
	"Lilo & Stitch: The Series"
	"Monty Python's Flying Circus"
	"Shaun the Sheep"
	"Scooby-Doo! Mystery, Inc."
	"Dexter's Laboratory"
	"Elena of Avalor"
	"Sofia the First"
	"Rapunzel's Tangled Adventure"
	"Big Hero 6: The Series"
	"Kikoriki"
	"Sam & Max: Freelance Police"
	"Over the Garden Wall"
	"Green Eggs and Ham"
}
//This envelope in particular I think is fun. You can use this in dialogue to pretend like your ghost is looking through your user's files!

usersfolder
{
	"%(username)'s Recycle Bin"
	"%(username)'s Documents folder"
	"%(username)'s secret folder"
	"%(username)'s My Computer folder"
	"%(username)'s Networks folder"
	"%(username)'s game saves"
}

answerdash
{
	"Nah"
	"Yeah, heh"
}

fourthwall
{
	"aitalk"
	"anchor"
	"bootend"
	"commu"
	"etc"
	"menu"
	"mouse"
	"nameteach"
	"string"
	"word"
}

//Now, this next envelope is unique. I'm just going to leave it the way that cindysuke wrote it, but look carefully. This list has TWO values, separated by a comma. You can see the first is the Korean word, and the second is the definition of the word. This is used for a bit of dialogue cindysuke wrote where their ghost would teach the user a word in Korean. 
//You can set up double envelopes like this too by following this format! However, it does require a bit of fancier coding in aitalk to get it to work right. I'll leave an example of it in aitalk so you can study it.
//lessonkor
//{
//	"사과(sa-gua),apple"
//	"노동(no-dong),labor"
//	"손가락(son-ga-rak),finger"
//	"마르크스(ma-r-k-s),Marx"
//	"자본주의(ja-bon-ju-yi),capitalism"
//}

winxp
{
	"Odyssey,first for home users"
	"Neptune,first for business users"
	"Whistler,second for home and business users"
	"XP,final for home and business users"
}

//You can also format your envelopes like this as one line separated by semicolons, but personally I think the spaced lists above look nicer. It's up to you however you want to set them up.

donks
{
	"Donkey"; "Eeyore"; "Swanky"; "Damru"; "all donkeys";
}

//The function below is made by Zi!

Slow
{
    _output = ""
    _p = ""
    if _argv[2] == "1" //If it's a precision \_w tag
    {
        _p = "\_w[" + _argv[1] + "]"
    }
    else //Simple \w tag
    {
        _p = "\w" + _argv[1]
    }
    for _i = 0; _i < STRLEN(_argv[0]); _i++
    {
        _output += "%(SUBSTR(_argv[0],_i,1))%(_p)"
    }
    _output
}
 //**** Don't touch this ***************************************************************
 //This is code stuff and nothing for you to worry about, just save the .dic and move on! You're done!
 
 On_\person
{
 	person
}
